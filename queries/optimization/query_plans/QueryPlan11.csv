Limit  (cost=1536144.97..1536144.97 rows=1 width=334)
  CTE year_total
    ->  Append  (cost=453759.98..1158124.69 rows=3599883 width=255)
          ->  Finalize GroupAggregate  (cost=453759.98..874852.50 rows=2880499 width=255)
"                Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year"
                ->  Gather Merge  (cost=453759.98..778835.86 rows=2400416 width=223)
                      Workers Planned: 2
                      ->  Partial GroupAggregate  (cost=452759.95..500768.27 rows=1200208 width=223)
"                            Group Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year"
                            ->  Sort  (cost=452759.95..455760.47 rows=1200208 width=201)
"                                  Sort Key: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year"
                                  ->  Parallel Hash Join  (cost=8015.36..93632.83 rows=1200208 width=201)
                                        Hash Cond: (store_sales.ss_sold_date_sk = date_dim.d_date_sk)
                                        ->  Parallel Hash Join  (cost=5643.54..88110.28 rows=1200208 width=201)
                                              Hash Cond: (store_sales.ss_customer_sk = customer.c_customer_sk)
                                              ->  Parallel Seq Scan on store_sales  (cost=0.00..63698.08 rows=1200208 width=18)
                                              ->  Parallel Hash  (cost=3356.24..3356.24 rows=58824 width=191)
                                                    ->  Parallel Seq Scan on customer  (cost=0.00..3356.24 rows=58824 width=191)
                                        ->  Parallel Hash  (cost=1834.70..1834.70 rows=42970 width=8)
                                              ->  Parallel Seq Scan on date_dim  (cost=0.00..1834.70 rows=42970 width=8)
          ->  Finalize GroupAggregate  (cost=124109.22..229273.95 rows=719384 width=255)
"                Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year"
                ->  Gather Merge  (cost=124109.22..205294.50 rows=599486 width=223)
                      Workers Planned: 2
                      ->  Partial GroupAggregate  (cost=123109.19..135098.91 rows=299743 width=223)
"                            Group Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year"
                            ->  Sort  (cost=123109.19..123858.55 rows=299743 width=204)
"                                  Sort Key: customer_1.c_customer_id, customer_1.c_first_name, customer_1.c_last_name, customer_1.c_preferred_cust_flag, customer_1.c_birth_country, customer_1.c_login, customer_1.c_email_address, date_dim_1.d_year"
                                  ->  Parallel Hash Join  (cost=8015.36..36419.52 rows=299743 width=204)
                                        Hash Cond: (web_sales.ws_sold_date_sk = date_dim_1.d_date_sk)
                                        ->  Parallel Hash Join  (cost=5643.54..33260.83 rows=299743 width=204)
                                              Hash Cond: (web_sales.ws_bill_customer_sk = customer_1.c_customer_sk)
                                              ->  Parallel Seq Scan on web_sales  (cost=0.00..21764.43 rows=299743 width=21)
                                              ->  Parallel Hash  (cost=3356.24..3356.24 rows=58824 width=191)
                                                    ->  Parallel Seq Scan on customer customer_1  (cost=0.00..3356.24 rows=58824 width=191)
                                        ->  Parallel Hash  (cost=1834.70..1834.70 rows=42970 width=8)
                                              ->  Parallel Seq Scan on date_dim date_dim_1  (cost=0.00..1834.70 rows=42970 width=8)
  ->  Sort  (cost=378020.28..378020.28 rows=1 width=334)
"        Sort Key: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_birth_country"
        ->  Nested Loop  (cost=0.00..378020.27 rows=1 width=334)
              Join Filter: ((t_s_secyear.customer_id = t_w_secyear.customer_id) AND (CASE WHEN (t_w_firstyear.year_total > '0'::numeric) THEN (t_w_secyear.year_total / t_w_firstyear.year_total) ELSE 0.0 END > CASE WHEN (t_s_firstyear.year_total > '0'::numeric) THEN (t_s_secyear.year_total / t_s_firstyear.year_total) ELSE 0.0 END))
              ->  Nested Loop  (cost=0.00..288017.79 rows=2 width=566)
                    Join Filter: (t_s_firstyear.customer_id = t_s_secyear.customer_id)
                    ->  Nested Loop  (cost=0.00..198013.52 rows=4 width=200)
                          Join Filter: (t_s_firstyear.customer_id = t_w_firstyear.customer_id)
                          ->  CTE Scan on year_total t_s_firstyear  (cost=0.00..98996.78 rows=30 width=100)
                                Filter: ((year_total > '0'::numeric) AND (sale_type = 's'::text) AND (dyear = 2001))
                          ->  CTE Scan on year_total t_w_firstyear  (cost=0.00..98996.78 rows=30 width=100)
                                Filter: ((year_total > '0'::numeric) AND (sale_type = 'w'::text) AND (dyear = 2001))
                    ->  CTE Scan on year_total t_s_secyear  (cost=0.00..89997.08 rows=90 width=366)
                          Filter: ((sale_type = 's'::text) AND (dyear = 2002))
              ->  CTE Scan on year_total t_w_secyear  (cost=0.00..89997.08 rows=90 width=100)
                    Filter: ((sale_type = 'w'::text) AND (dyear = 2002))
JIT:
  Functions: 74
"  Options: Inlining true, Optimization true, Expressions true, Deforming true"
